import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components/ui/sonner";
import { client } from "@/sanity/lib/client";
import { defineQuery } from "next-sanity";
import { themeToCssVars } from "@/lib/themeToCssVars";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const siteSettingsQuery = defineQuery(`*[_type == "siteSettings"][0] {
        logo,
        themeColor,
        legalName
    }`);

    const data = await client.fetch(siteSettingsQuery);
    console.log("ðŸš€ ~ data:", themeToCssVars(data?.themeColor));

    return (
        <html lang="en" style={themeToCssVars(data?.themeColor)}>
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
                {children}
                <Toaster />
            </body>
        </html>
    );
}
